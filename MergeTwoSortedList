/* Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.

 */
 
 /**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        if(l1 == null && l2 == null)
            return null;
        if(l1 == null)
            return l2;
        if(l2 == null)
            return l1;
        
        ListNode root;
        if(l1.val < l2.val){
          root = new ListNode(l1.val);  
          l1 = l1.next;  
        } else{
            root = new ListNode(l2.val);  
          l2 = l2.next;   
        }
        ListNode temp = root;
       
        while(l1 != null && l2 != null){
            
            ListNode node;
            if(l1.val < l2.val){
          node = new ListNode(l1.val);  
          l1 = l1.next;  
        } else{
            node = new ListNode(l2.val);  
          l2 = l2.next;   
        }
           temp.next = node;
            temp = temp.next;
        }
        
        if(l1 != null){
            temp.next = l1;
        } else{
            temp.next = l2;
        }
        return root;
        
    }
}
