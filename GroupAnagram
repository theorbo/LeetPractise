/* Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
*/

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        
       Map<String, List<String>> mp = new HashMap<>();
    for(int i = 0; i < strs.length; i++){
      String temp = sortString(strs[i]);
      if(mp.containsKey(temp)){
        List<String> tempList = mp.get(temp);
        tempList.add(strs[i]);
        mp.put(temp, tempList);
      } else{
        List<String> tempList = new ArrayList<>();
        tempList.add(strs[i]);
        mp.put(temp, tempList);
      }
    }
    List<List<String>> result = new ArrayList<>();
    for(Map.Entry<String, List<String>> entry : mp.entrySet()){
      result.add(entry.getValue());
    }
    return result;
        
    }
     private String sortString(String s){
    char[] chars = s.toCharArray();
    Arrays.sort(chars);
    String sorted = new String(chars);
    return sorted;
  }
}
